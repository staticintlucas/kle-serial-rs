name: Test

on: [push, pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Setup tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-rdme
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Run Clippy
        run: cargo clippy
        env:
          RUSTFLAGS: -D warnings
      - name: Build documentation
        run: cargo doc --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: -D warnings
      - name: Check README
        run: cargo rdme --check

  test:
    name: Build & Test (Stable)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: Run cargo update
        run: cargo update
      - name: Run cargo build
        run: cargo build
        env:
          RUSTFLAGS: -D warnings
      - name: Run cargo test
        run: cargo test

  test-msrv:
    name: Build & Test (MSRV)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.63.0
      - name: Run cargo build
        run: cargo build
        env:
          RUSTFLAGS: -D warnings
      - name: Run cargo test
        run: cargo test

  coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: llvm-tools
      - name: Setup grcov
        uses: taiki-e/install-action@v2
        with:
          tool: grcov
      - name: Run cargo test
        run: cargo test --lib
        env:
          RUSTFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: kle-serial-%p-%m.profraw
      - name: Run grcov
        run: >-
          grcov .
          --source-dir .
          --binary-path ./target/debug/
          --output-type lcov
          --branch
          --llvm
          --ignore-not-existing
          --output-path ./lcov.info
          --ignore '/*'
          --excl-line '(^\s*#\[derive\([\w, ]*\)\]|unreachable!\(\))'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
          fail_ci_if_error: true
